name: Deploy to GitHub Pages

# Deploy pre-built reports to GitHub Pages when main branch is updated
on:
  push:
    branches:
      - main
  workflow_dispatch:

# Allow only one concurrent deployment
concurrency:
  group: pages-deploy
  cancel-in-progress: true

permissions:
  contents: write  # Allow pushing to gh-pages branch
  pages: read
  id-token: write

jobs:
  deploy-pages:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
        
    - name: Verify pre-built reports exist
      run: |
        # Verify that pre-built reports exist
        if [ ! -f "docs/index.html" ]; then
          echo "❌ Error: No pre-built index.html found"
          echo "Please run 'python main.py --all' locally and commit the generated files."
          exit 1
        fi
        
        if [ ! -d "docs/data" ]; then
          echo "❌ Error: No pre-built data directory found"
          echo "Please run 'python main.py --all' locally and commit the generated files."
          exit 1
        fi
        
        echo "✅ Pre-built reports verified"
        
    - name: Create deployment metadata
      run: |
        # Create deployment info file
        cat > docs/deployment-info.json << EOF
        {
          "deployment_type": "static",
          "branch": "main",
          "commit_sha": "${{ github.sha }}",
          "deployed_at": "$(date -Iseconds)",
          "repository": "${{ github.repository }}",
          "workflow_run": "${{ github.run_id }}"
        }
        EOF
        
    - name: Deploy to GitHub Pages root
      uses: JamesIves/github-pages-deploy-action@v4
      with:
        branch: gh-pages
        folder: docs
        token: ${{ secrets.GITHUB_TOKEN }}
        clean: false  # Don't clean to preserve PR preview subdirectories
        
    - name: Display deployment summary
      run: |
        echo "## Static Site Deployment Summary" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "✅ **Pre-built site deployed successfully!**" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "### Production URL" >> $GITHUB_STEP_SUMMARY
        echo "🔗 https://${{ github.repository_owner }}.github.io/${{ github.event.repository.name }}/" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "### Deployment Details" >> $GITHUB_STEP_SUMMARY
        echo "- **Type**: Static file deployment" >> $GITHUB_STEP_SUMMARY
        echo "- **Branch**: main" >> $GITHUB_STEP_SUMMARY
        echo "- **Commit**: ${{ github.sha }}" >> $GITHUB_STEP_SUMMARY
        echo "- **Deployed**: $(date -Iseconds)" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "### Available Reports" >> $GITHUB_STEP_SUMMARY
        echo "- 📊 [Dashboard](https://napinoco.github.io/optimization-solver-benchmark/) - Main benchmark overview" >> $GITHUB_STEP_SUMMARY
        echo "- ⚡ [Solver Comparison](https://napinoco.github.io/optimization-solver-benchmark/solver_comparison.html) - Performance comparison" >> $GITHUB_STEP_SUMMARY
        echo "- 📋 [Problem Analysis](https://napinoco.github.io/optimization-solver-benchmark/problem_analysis.html) - Problem insights" >> $GITHUB_STEP_SUMMARY
        echo "- 📈 [Results Matrix](https://napinoco.github.io/optimization-solver-benchmark/results_matrix.html) - Problems × Solvers matrix" >> $GITHUB_STEP_SUMMARY
        echo "- 📊 [Statistical Analysis](https://napinoco.github.io/optimization-solver-benchmark/statistical_analysis.html) - Advanced analytics" >> $GITHUB_STEP_SUMMARY
        echo "- ⚡ [Performance Profiling](https://napinoco.github.io/optimization-solver-benchmark/performance_profiling.html) - Performance metrics" >> $GITHUB_STEP_SUMMARY
        echo "- 🖥️ [Environment Info](https://napinoco.github.io/optimization-solver-benchmark/environment_info.html) - System specifications" >> $GITHUB_STEP_SUMMARY