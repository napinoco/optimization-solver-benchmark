name: Deploy PR Preview

# This workflow deploys preview versions of the benchmark reports for pull requests
# Provides temporary URLs for reviewing changes before merging to main
# Automatically cleans up when PR is closed

on:
  pull_request:
    types:
      - opened
      - reopened
      - synchronize
      - closed

# Prevent multiple preview deployments for the same PR
concurrency: 
  group: preview-${{ github.ref }}
  cancel-in-progress: true

env:
  PYTHON_VERSION: '3.12'

permissions:
  contents: write  # Allow pushing to gh-pages branch
  pages: write
  id-token: write
  pull-requests: write

jobs:
  deploy-preview:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    # Skip build for closed PRs (only cleanup needed)
    - name: Set up Python
      if: github.event.action != 'closed'
      uses: actions/setup-python@v5
      with:
        python-version: ${{ env.PYTHON_VERSION }}
        cache: 'pip'
        cache-dependency-path: |
          requirements/base.txt
          requirements/python.txt
        
    - name: Create virtual environment
      if: github.event.action != 'closed'
      run: |
        python -m venv venv
        source venv/bin/activate
        echo "VIRTUAL_ENV=${VIRTUAL_ENV}" >> $GITHUB_ENV
        echo "${VIRTUAL_ENV}/bin" >> $GITHUB_PATH
        
    - name: Install dependencies
      if: github.event.action != 'closed'
      run: |
        source venv/bin/activate
        pip install --upgrade pip
        pip install -r requirements/base.txt
        pip install -r requirements/python.txt
        
    - name: Validate environment
      if: github.event.action != 'closed'
      run: |
        source venv/bin/activate
        python main.py --validate
        
    - name: Run preview benchmark
      if: github.event.action != 'closed'
      run: |
        source venv/bin/activate
        
        echo "## Preview Benchmark Configuration" >> $GITHUB_STEP_SUMMARY
        echo "- **Trigger**: Pull Request #${{ github.event.number }}" >> $GITHUB_STEP_SUMMARY
        echo "- **Solvers**: scipy,cvxpy (limited for preview)" >> $GITHUB_STEP_SUMMARY
        echo "- **Problem Set**: light_set" >> $GITHUB_STEP_SUMMARY
        echo "- **Timeout**: 300s" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        
        # Run lightweight benchmark for preview (fast execution)
        python main.py --benchmark --solvers "scipy,cvxpy" --problem-set "light_set"
        
    - name: Generate preview reports
      if: github.event.action != 'closed'
      run: |
        source venv/bin/activate
        python main.py --report
        
        # Add preview notice to all HTML files
        find docs -name "*.html" -exec sed -i '/<header>/a\
            <div style="background: #fff3cd; border: 1px solid #ffeaa7; padding: 10px; margin: 10px 0; border-radius: 5px; text-align: center;">\
                <strong>🚧 Preview Environment</strong> - This is a preview of PR #${{ github.event.number }}. \
                <a href="https://github.com/${{ github.repository }}/pull/${{ github.event.number }}">View Pull Request →</a>\
            </div>' {} \;
        
    - name: Create preview metadata
      if: github.event.action != 'closed'
      run: |
        # Create a preview info file
        cat > docs/preview-info.json << EOF
        {
          "pr_number": "${{ github.event.number }}",
          "pr_title": "${{ github.event.pull_request.title }}",
          "pr_author": "${{ github.event.pull_request.user.login }}",
          "commit_sha": "${{ github.sha }}",
          "generated_at": "$(date -Iseconds)",
          "repository": "${{ github.repository }}",
          "pr_url": "${{ github.event.pull_request.html_url }}"
        }
        EOF
        
        # Add preview metadata to main index page
        cat >> docs/index.html << EOF
        
        <!-- Preview Metadata -->
        <script>
        console.log('Preview Info:', $(cat docs/preview-info.json));
        </script>
        EOF
        
    - name: Deploy PR preview
      if: github.event.action != 'closed'
      uses: JamesIves/github-pages-deploy-action@v4
      with:
        branch: gh-pages
        folder: docs
        target-folder: pr-preview/pr-${{ github.event.number }}
        token: ${{ secrets.GITHUB_TOKEN }}
        clean: false
        
    - name: Clean up PR preview
      if: github.event.action == 'closed'
      run: |
        # Create a temporary empty directory for cleanup
        mkdir -p /tmp/empty-cleanup
        
    - name: Remove PR preview directory
      if: github.event.action == 'closed'
      uses: JamesIves/github-pages-deploy-action@v4
      with:
        branch: gh-pages
        folder: /tmp/empty-cleanup
        target-folder: pr-preview/pr-${{ github.event.number }}
        token: ${{ secrets.GITHUB_TOKEN }}
        clean: true
        
    - name: Comment preview URL
      if: github.event.action != 'closed'
      uses: actions/github-script@v7
      with:
        script: |
          const prNumber = context.payload.pull_request.number;
          const previewUrl = `https://${{ github.repository_owner }}.github.io/${{ github.event.repository.name }}/pr-preview/pr-${prNumber}/`;
          
          const comment = `## 📊 Benchmark Preview Ready!
          
          Your preview has been deployed and is available at:
          
          **🔗 [View Preview Reports](${previewUrl})**
          
          ### Preview Details
          - **PR**: #${prNumber} - ${{ github.event.pull_request.title }}
          - **Commit**: \`${{ github.sha }}\`
          - **Author**: @${{ github.event.pull_request.user.login }}
          - **Generated**: ${new Date().toISOString()}
          
          ### Available Reports
          - [📊 Dashboard](${previewUrl}) - Main benchmark overview
          - [⚡ Solver Comparison](${previewUrl}solver_comparison.html) - Performance comparison
          - [📋 Problem Analysis](${previewUrl}problem_analysis.html) - Problem-specific insights
          - [📈 Results Matrix](${previewUrl}results_matrix.html) - Problems × Solvers matrix
          - [📊 Statistical Analysis](${previewUrl}statistical_analysis.html) - Advanced analytics
          - [⚡ Performance Profiling](${previewUrl}performance_profiling.html) - Performance metrics
          - [🖥️ Environment Info](${previewUrl}environment_info.html) - System specifications
          
          ### Notes
          - Preview uses lightweight benchmark (scipy, cvxpy with light_set problems)
          - Preview will be updated automatically when you push new commits
          - Preview will be cleaned up automatically when the PR is closed
          
          ---
          *Preview powered by [pr-preview-action](https://github.com/rossjrw/pr-preview-action)*`;
          
          github.rest.issues.createComment({
            issue_number: prNumber,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: comment
          });
          
    - name: Update status on failure
      if: failure() && github.event.action != 'closed'
      uses: actions/github-script@v7
      with:
        script: |
          const prNumber = context.payload.pull_request.number;
          
          const comment = `## ❌ Preview Deployment Failed
          
          The benchmark preview deployment for PR #${prNumber} has failed.
          
          **Details:**
          - **Commit**: \`${{ github.sha }}\`
          - **Workflow**: [View Failed Run](${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }})
          
          Please check the workflow logs for more details.`;
          
          github.rest.issues.createComment({
            issue_number: prNumber,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: comment
          });
          
    - name: Display preview summary
      if: github.event.action != 'closed'
      run: |
        echo "## Preview Deployment Summary" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "✅ **Preview deployed successfully!**" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "### Preview URL" >> $GITHUB_STEP_SUMMARY
        echo "🔗 https://${{ github.repository_owner }}.github.io/${{ github.event.repository.name }}/pr-preview/pr-${{ github.event.number }}/" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "### Key Features" >> $GITHUB_STEP_SUMMARY
        echo "- 🚧 Clear preview environment indicators" >> $GITHUB_STEP_SUMMARY
        echo "- 📊 Full benchmark report suite" >> $GITHUB_STEP_SUMMARY
        echo "- 🔄 Auto-updates on new commits" >> $GITHUB_STEP_SUMMARY
        echo "- 🧹 Auto-cleanup when PR is closed" >> $GITHUB_STEP_SUMMARY
        echo "- 💬 PR comment with preview links" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "### Technical Details" >> $GITHUB_STEP_SUMMARY
        echo "- **Benchmark Configuration**: scipy,cvxpy with light_set problems" >> $GITHUB_STEP_SUMMARY
        echo "- **Deployment Method**: GitHub Pages via pr-preview-action" >> $GITHUB_STEP_SUMMARY
        echo "- **Branch**: gh-pages (pr-preview/pr-${{ github.event.number }})" >> $GITHUB_STEP_SUMMARY
        echo "- **Python Version**: ${{ env.PYTHON_VERSION }}" >> $GITHUB_STEP_SUMMARY