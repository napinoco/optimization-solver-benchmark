# SCS Backend Configuration Template
# Splitting Conic Solver for LP, QP, SOCP, SDP problems with emphasis on robustness

scs_cvxpy:
  name: "SCS (via CVXPY)"
  environment: "python"
  backend: "SCS"
  
  # Problem type support
  supported_types: ["LP", "QP", "SOCP", "SDP"]
  
  # Performance characteristics
  performance:
    tier: "medium"
    memory_efficiency: "medium"
    stability: "mature"
    recommended_for: ["robust_solving", "mixed_problems", "research_applications"]
  
  # MINIMAL CONFIGURATION (for fair baseline comparison)
  # Recommended for initial benchmarking to establish baseline performance
  solver_options:
    verbose: false          # Disable verbose output (essential for clean benchmarking)
  
  # ADVANCED CONFIGURATION OPTIONS (commented out for minimal baseline)
  # Uncomment and adjust these parameters for performance tuning:
  # solver_options:
  #   # Convergence tolerances
  #   eps: 1.0e-5             # Convergence tolerance
  #   
  #   # Iteration limits
  #   max_iters: 100000       # Maximum iterations
  #   
  #   # Algorithm parameters
  #   alpha: 1.5              # Relaxation parameter
  #   rho_x: 1.0e-6          # Primal proximal penalty
  #   
  #   # Scaling and normalization
  #   normalize: true         # Normalize problem data
  #   scale: 1.0             # Scaling factor
  #   
  #   # Adaptive restart
  #   adaptive_scale: true    # Enable adaptive scaling
  #   
  #   # Linear system solver
  #   use_indirect: true      # Use indirect method for linear systems
  #   
  #   # Acceleration
  #   acceleration_lookback: 10  # Lookback for acceleration
  #   acceleration_interval: 10 # Acceleration interval
  #   
  #   # Verbosity
  #   verbose: false          # Enable verbose output
  #   
  #   # Write data (for debugging)
  #   write_data_filename: null  # Write problem data to file
  #   
  #   # Warm starting  
  #   warm_start: false       # Enable warm starting
    
  # Installation requirements
  installation:
    package: "scs"
    min_version: "3.2.0"
    pip_install: "scs>=3.2.0"
    conda_install: "conda install -c conda-forge scs"
    notes: "General-purpose conic solver, very robust and stable"
  
  # MINIMAL CONFIGURATION: Empty problem optimizations for baseline comparison
  problem_optimizations: {}
  
  # ADVANCED PROBLEM-SPECIFIC OPTIMIZATIONS (commented out for minimal baseline)
  # Uncomment and adjust these for performance tuning:
  # problem_optimizations:
  #   LP:
  #     # Linear programming optimizations
  #     eps: 1.0e-6
  #     normalize: true
  #     use_indirect: false
  #     
  #   QP:
  #     # Quadratic programming optimizations  
  #     alpha: 1.6
  #     rho_x: 1.0e-6
  #     adaptive_scale: true
  #     
  #   SOCP:
  #     # Second-order cone programming optimizations
  #     eps: 1.0e-6
  #     max_iters: 50000
  #     acceleration_lookback: 20
  #     
  #   SDP:
  #     # Semidefinite programming optimizations
  #     eps: 1.0e-4
  #     max_iters: 25000
  #     use_indirect: true
  #     normalize: false
  
  # Timeout and resource limits
  timeout: 300
  memory_limit: null
  
  # Diagnostics and monitoring
  diagnostics:
    enabled: true
    track_iterations: true
    track_objective_progress: true
    track_residuals: true
    track_acceleration: true
  
  enabled: true