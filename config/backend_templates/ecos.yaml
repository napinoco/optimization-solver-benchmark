# ECOS Backend Configuration Template
# Embedded Conic Solver optimized for LP, QP, SOCP problems with focus on speed

ecos_cvxpy:
  name: "ECOS (via CVXPY)"
  environment: "python"
  backend: "ECOS"
  
  # Problem type support
  supported_types: ["LP", "QP", "SOCP"]
  
  # Performance characteristics
  performance:
    tier: "medium"
    memory_efficiency: "high"
    stability: "mature"
    recommended_for: ["embedded_systems", "real_time_applications", "small_to_medium_problems"]
  
  # Backend-specific parameters
  solver_options:
    # Convergence tolerances
    feastol: 1.0e-8         # Feasibility tolerance
    abstol: 1.0e-8          # Absolute tolerance
    reltol: 1.0e-8          # Relative tolerance
    feastol_inacc: 1.0e-4   # Inaccurate feasibility tolerance
    abstol_inacc: 5.0e-5    # Inaccurate absolute tolerance
    reltol_inacc: 5.0e-5    # Inaccurate relative tolerance
    
    # Iteration limits
    max_iters: 100          # Maximum iterations
    
    # Verbosity
    verbose: false          # Enable verbose output
    
    # Numerical stability
    nitref: 9               # Number of iterative refinement steps
    
    # Interior point method parameters
    mi: 0.99                # Barrier parameter decrease factor
    delta: 2.0e-7          # Regularization parameter
    
  # Installation requirements
  installation:
    package: "ecos"
    min_version: "2.0.0"
    pip_install: "ecos>=2.0.0"
    conda_install: "conda install -c conda-forge ecos"
    notes: "Lightweight solver, excellent for embedded applications and real-time use"
  
  # Problem-specific optimizations
  problem_optimizations:
    LP:
      # Linear programming optimizations
      feastol: 1.0e-9
      abstol: 1.0e-9
      max_iters: 200
      
    QP:
      # Quadratic programming optimizations
      feastol: 1.0e-8
      reltol: 1.0e-8
      nitref: 5
      
    SOCP:
      # Second-order cone programming optimizations
      feastol: 1.0e-7
      abstol: 1.0e-7
      max_iters: 100
      mi: 0.95
  
  # Timeout and resource limits
  timeout: 300
  memory_limit: null
  
  # Diagnostics and monitoring
  diagnostics:
    enabled: true
    track_iterations: true
    track_objective_progress: true
    track_feasibility: true
    track_refinement_steps: true
  
  enabled: true